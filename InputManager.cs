using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class InputManager : MonoBehaviour
{
    // Reference to the PlayerInput asset generated by the Input System
    private PlayerInput playerInput;

    // Actions related to the player's on-foot movement
    public PlayerInput.OnFootActions onFoot;

    // References to the player's motor and look components
    private PlayerMotor motor;
    private PlayerLook look;

    // Start is called before the first frame update
    void Awake()
    {
        // Initialize PlayerInput and bind onFoot actions
        playerInput = new PlayerInput();
        onFoot = playerInput.OnFoot;

        // Get references to motor and look components attached to the same GameObject
        motor = GetComponent<PlayerMotor>();
        look = GetComponent<PlayerLook>();

        // Bind Jump action to the motor's Jump method
        onFoot.Jump.performed += ctx => motor.Jump();

        // Bind Crouch and Sprint actions to corresponding motor methods
        onFoot.Crouch.performed += ctx => motor.Crouch();
        onFoot.Sprint.performed += ctx => motor.Sprint();
    }

    // Update is called once per frame
    void FixedUpdate()
    {
        // Process player's movement based on input values
        motor.ProcessMove(onFoot.Movement.ReadValue<Vector2>());
    }

    // LateUpdate is called once per frame after all Update calls
    private void LateUpdate()
    {
        // Process player's look direction based on input values
        look.ProcessLook(onFoot.Look.ReadValue<Vector2>());
    }

    // Enable the onFoot actions when the script is enabled
    private void OnEnable()
    {
        onFoot.Enable();
    }

    // Disable the onFoot actions when the script is disabled
    private void OnDisable()
    {
        onFoot.Disable();
    }
}
